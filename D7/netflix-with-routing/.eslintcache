[{"C:\\Users\\SINKOPA\\Documents\\GitHub\\Strive-M4\\D7\\netflix-with-routing\\src\\reportWebVitals.js":"1","C:\\Users\\SINKOPA\\Documents\\GitHub\\Strive-M4\\D7\\netflix-with-routing\\src\\App.js":"2","C:\\Users\\SINKOPA\\Documents\\GitHub\\Strive-M4\\D7\\netflix-with-routing\\src\\components\\NavBar.jsx":"3","C:\\Users\\SINKOPA\\Documents\\GitHub\\Strive-M4\\D7\\netflix-with-routing\\src\\components\\MyFooter.jsx":"4","C:\\Users\\SINKOPA\\Documents\\GitHub\\Strive-M4\\D7\\netflix-with-routing\\src\\components\\MovieList.jsx":"5","C:\\Users\\SINKOPA\\Documents\\GitHub\\Strive-M4\\D7\\netflix-with-routing\\src\\components\\MoviesRow.jsx":"6","C:\\Users\\SINKOPA\\Documents\\GitHub\\Strive-M4\\D7\\netflix-with-routing\\src\\components\\TVShows.jsx":"7","C:\\Users\\SINKOPA\\Documents\\GitHub\\Strive-M4\\D7\\netflix-with-routing\\src\\components\\Movies.jsx":"8"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":496,"mtime":1606233623350,"results":"11","hashOfConfig":"10"},{"size":2425,"mtime":1606233821958,"results":"12","hashOfConfig":"10"},{"size":2656,"mtime":1606228639457,"results":"13","hashOfConfig":"10"},{"size":1030,"mtime":1606232380009,"results":"14","hashOfConfig":"10"},{"size":3935,"mtime":1606231363603,"results":"15","hashOfConfig":"10"},{"size":168,"mtime":1606233723806,"results":"16","hashOfConfig":"10"},{"size":174,"mtime":1606233766270,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"5dazr7",{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\SINKOPA\\Documents\\GitHub\\Strive-M4\\D7\\netflix-with-routing\\src\\reportWebVitals.js",[],"C:\\Users\\SINKOPA\\Documents\\GitHub\\Strive-M4\\D7\\netflix-with-routing\\src\\App.js",["36"],"C:\\Users\\SINKOPA\\Documents\\GitHub\\Strive-M4\\D7\\netflix-with-routing\\src\\components\\NavBar.jsx",["37","38","39","40","41"],"C:\\Users\\SINKOPA\\Documents\\GitHub\\Strive-M4\\D7\\netflix-with-routing\\src\\components\\MyFooter.jsx",[],"C:\\Users\\SINKOPA\\Documents\\GitHub\\Strive-M4\\D7\\netflix-with-routing\\src\\components\\MovieList.jsx",["42","43","44"],"import React, { Component } from 'react'\r\nimport { Button } from 'react-bootstrap'\r\nimport MoviesRow from './MoviesRow'\r\n\r\nexport default class MovieList extends Component {\r\n  state = {\r\n    show: false,\r\n    currentMovie: [],\r\n  };\r\n  componentDidMount = (movie) => {};\r\n    handleOpenModal = async (movieId) => {\r\n    this.setState({ show: true, currentMovie: movieId });\r\n    };\r\n    \r\n    handleCloseModal = () => {  \r\n    this.setState({ show: false, currentMovie:\"\" });\r\n    };\r\n    \r\n\r\n\r\n\r\n  render() {\r\n    let { show, currentMovie } = this.state;\r\n    return (\r\n      <div>\r\n        <MoviesRow handleOpenModal={this.handleOpenModal} query={\"Batman\"} />\r\n        <MoviesRow handleOpenModal={this.handleOpenModal} query={\"Life\"} />\r\n        <MoviesRow handleOpenModal={this.handleOpenModal} query={\"Harry\"} />\r\n    \r\n          {/*<ModalMovie\r\n            handleClose={this.handleCloseModal}\r\n            show={show}\r\n            currentMovie={[...currentMovie]}\r\n          ></ModalMovie>*/}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\SINKOPA\\Documents\\GitHub\\Strive-M4\\D7\\netflix-with-routing\\src\\components\\MoviesRow.jsx",["45","46","47"],"import React, { Component } from \"react\";\r\nimport { Row, Button, Carousel, Col, Card } from \"react-bootstrap\";\r\nimport \"../styles/MovieRow.css\";\r\nimport SortIcon from \"@material-ui/icons/Sort\";\r\nimport {Link} from 'react-router-dom';\r\n// import Slider from \"react-slick\";\r\n// import \"slick-carousel/slick/slick.css\";\r\n// import \"slick-carousel/slick/slick-theme.css\";\r\n\r\nexport default class MoviesRow extends Component {\r\n  state = {\r\n    movies: [],\r\n    sorted: true,\r\n  };\r\n  componentDidMount = async () => {\r\n    await this.fetchMovies(this.props.query);\r\n    console.log(this.state.movies);\r\n  };\r\n  // componentDidMount = async () => {\r\n  //   if(this.state.sorted)\r\n  //   {await this.fetchMovies(this.props.query);\r\n  //   console.log(this.state.movies);}\r\n  // };\r\n  sortByYear = () => {\r\n    let { movies } = this.state;\r\n    let moviesByYear = movies.sort(\r\n      (movie1, movie2) => movie1.Year - movie2.Year\r\n    );\r\n    this.setState({ movies: moviesByYear, sorted: true });\r\n  };\r\n\r\n  fetchMovies = async (q) => {\r\n    let baseUrl = `http://www.omdbapi.com/?`;\r\n    let apiKey = `apikey=e88d2a55&`;\r\n    try {\r\n      let res = await fetch(`${baseUrl}s=${q}&${apiKey}`, {\r\n        method: \"GET\",\r\n      });\r\n      if (res.ok) {\r\n        let data = await res.json();\r\n        this.setState({ movies: data.Search });\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n  render() {\r\n    // const settings = {\r\n    //   dots: true,\r\n    //   infinite: true,\r\n    //   speed: 500,\r\n    //   slidesToShow: 3,\r\n    //   slidesToScroll: 3,\r\n    // };\r\n    let { movies } = this.state;\r\n    return (\r\n      <Row className=\"my-4 mx-4 no-gutters\">\r\n        <Row className=\"d-flex justify-content-between w-100\">\r\n          <h3 className=\"mx-3 movieRowTitle text-capitalize text-white\">\r\n            {this.props.query}\r\n          </h3>\r\n          <SortIcon\r\n            onClick={() => this.sortByYear()}\r\n            style={{ color: \"white\", cursor: \"pointer\" }}\r\n          />\r\n        </Row>\r\n        <Row>\r\n          {movies.map((movie) => (\r\n            <Col\r\n              xs={12}\r\n              md={4}\r\n              lg={3}\r\n              xl={2}\r\n              className=\"my-4\"\r\n              key={movie.imdbID}\r\n            >\r\n            <Link to={`/movie/${movie?.imdbID}`}>\r\n              <Card style={{ width: \"15rem\" }}>\r\n                <a onClick={() => this.props.handleOpenModal(movie.imdbID)}>\r\n                  <Card.Img variant=\"top\" src={movie.Poster} />{\" \"}\r\n                </a>\r\n              </Card>\r\n            </Link>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n        {/* <Carousel\r\n          className=\"movieCarousel\"\r\n          style={{ heigth: \"300px\" }}\r\n          indicators=\"false\"\r\n          controls=\"true\"\r\n        >\r\n          {movies.map((movie) => (\r\n            <Col md={4} style={{ height: \"300px\" }}>\r\n              <Carousel.Item key={movie.imdbID}>\r\n                <img\r\n                  className=\"d-flex img-fluid\"\r\n                  src={movie.Poster}\r\n                  alt=\"movie-poster\"\r\n                ></img>\r\n                <Carousel.Caption>\r\n                  <h3>\r\n                    <a onClick={() => this.props.handleOpenModal(movie.imdbID)}>\r\n                      {movie.Title} ({movie.Year})\r\n                    </a>\r\n                  </h3>\r\n                </Carousel.Caption>\r\n              </Carousel.Item>\r\n            </Col>\r\n          ))}\r\n        </Carousel> */}\r\n\r\n        {/* <Slider {...settings}>\r\n          {movies.map((movie) => (\r\n            <div style={{ height: \"300px\" }}>\r\n              //{\" \"}\r\n              <h3>\r\n                {movie.Title} ({movie.Year})\r\n              </h3>\r\n              <img\r\n                className=\"img-fluid\"\r\n                src={movie.Poster}\r\n                alt=\"movie-poster\"\r\n              />\r\n            </div>\r\n          ))}\r\n        </Slider>*/}\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\SINKOPA\\Documents\\GitHub\\Strive-M4\\D7\\netflix-with-routing\\src\\components\\TVShows.jsx",[],"C:\\Users\\SINKOPA\\Documents\\GitHub\\Strive-M4\\D7\\netflix-with-routing\\src\\components\\Movies.jsx",[],{"ruleId":"48","severity":1,"message":"49","line":1,"column":8,"nodeType":"50","messageId":"51","endLine":1,"endColumn":12},{"ruleId":"48","severity":1,"message":"52","line":2,"column":41,"nodeType":"50","messageId":"51","endLine":2,"endColumn":52},{"ruleId":"48","severity":1,"message":"53","line":2,"column":54,"nodeType":"50","messageId":"51","endLine":2,"endColumn":60},{"ruleId":"48","severity":1,"message":"54","line":2,"column":62,"nodeType":"50","messageId":"51","endLine":2,"endColumn":67},{"ruleId":"48","severity":1,"message":"55","line":8,"column":10,"nodeType":"50","messageId":"51","endLine":8,"endColumn":16},{"ruleId":"48","severity":1,"message":"56","line":11,"column":22,"nodeType":"50","messageId":"51","endLine":11,"endColumn":28},{"ruleId":"48","severity":1,"message":"53","line":2,"column":10,"nodeType":"50","messageId":"51","endLine":2,"endColumn":16},{"ruleId":"48","severity":1,"message":"57","line":23,"column":11,"nodeType":"50","messageId":"51","endLine":23,"endColumn":15},{"ruleId":"48","severity":1,"message":"58","line":23,"column":17,"nodeType":"50","messageId":"51","endLine":23,"endColumn":29},{"ruleId":"48","severity":1,"message":"53","line":2,"column":15,"nodeType":"50","messageId":"51","endLine":2,"endColumn":21},{"ruleId":"48","severity":1,"message":"59","line":2,"column":23,"nodeType":"50","messageId":"51","endLine":2,"endColumn":31},{"ruleId":"60","severity":1,"message":"61","line":79,"column":17,"nodeType":"62","endLine":79,"endColumn":77},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'FormControl' is defined but never used.","'Button' is defined but never used.","'Alert' is defined but never used.","'faUser' is defined but never used.","'Router' is defined but never used.","'show' is assigned a value but never used.","'currentMovie' is assigned a value but never used.","'Carousel' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement"]