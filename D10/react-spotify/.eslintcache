[{"C:\\Users\\SINKOPA\\Documents\\GitHub\\Strive-M4\\D10\\react-spotify\\src\\reportWebVitals.js":"1","C:\\Users\\SINKOPA\\Documents\\GitHub\\Strive-M4\\D10\\react-spotify\\src\\App.js":"2","C:\\Users\\SINKOPA\\Documents\\GitHub\\Strive-M4\\D10\\react-spotify\\src\\components\\HomeContent.jsx":"3","C:\\Users\\SINKOPA\\Documents\\GitHub\\Strive-M4\\D10\\react-spotify\\src\\components\\Login.jsx":"4"},{"size":362,"mtime":499162500000,"results":"5","hashOfConfig":"6"},{"size":622,"mtime":1606610343982,"results":"7","hashOfConfig":"6"},{"size":7673,"mtime":1606612898015,"results":"8","hashOfConfig":"6"},{"size":2577,"mtime":1606611780752,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"swsq4f",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\SINKOPA\\Documents\\GitHub\\Strive-M4\\D10\\react-spotify\\src\\reportWebVitals.js",[],"C:\\Users\\SINKOPA\\Documents\\GitHub\\Strive-M4\\D10\\react-spotify\\src\\App.js",[],"C:\\Users\\SINKOPA\\Documents\\GitHub\\Strive-M4\\D10\\react-spotify\\src\\components\\HomeContent.jsx",["19","20","21"],"import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEllipsisH, faHeart, faPlay } from '@fortawesome/free-solid-svg-icons';\r\nimport React from 'react';\r\nimport {Row, Col, Spinner} from 'react-bootstrap';\r\nimport '../styles/styles.css';\r\n\r\nclass HomeContent extends React.Component {\r\n\r\n    state = {\r\n        artists: ['pink floyd', 'eric clapton', 'linkin park'],\r\n        albums: [],\r\n        error: '',\r\n        loading:true\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n      const promiseArray = this.state.artists.map(async (artist) => {\r\n            const result = await this.fetchArtist(artist);\r\n            return {\r\n                name:artist.toUpperCase(),\r\n                data:result.data\r\n            }\r\n        });\r\n        const result = await Promise.all(promiseArray);\r\n       \r\n        this.setState({albums:result,loading:false})\r\n    };\r\n\r\n    fetchArtist = async (artist) => {\r\n        try {\r\n            let res = await fetch(\"https://deezerdevs-deezer.p.rapidapi.com/search?q=\"+artist, {\r\n                \"method\": \"GET\",\r\n                \"headers\": {\r\n                    \"x-rapidapi-key\": \"a44588e47dmsh9b184d3ebdf2d08p1faa3djsn2e64ecb46487\",\r\n                    \"x-rapidapi-host\": \"deezerdevs-deezer.p.rapidapi.com\"\r\n                }\r\n            },\r\n            this.setState({loading: true})\r\n            );\r\n            if (res.ok) {\r\n              let data = await res.json();\r\n                     \r\n              return data;\r\n            }\r\n          } catch (e) {\r\n            console.log(e);\r\n            this.setState({error: e});\r\n          }\r\n      };\r\n\r\n    render(){\r\n        \r\n        const {loading,albums} =  this.state;\r\n         return( \r\n              <div style={{overflowY : 'auto'}} class='homeContent'>\r\n\r\n              <section className=\"mainframe\">\r\n              <div className=\"main-content d-flex flex-column\" style={{overflowX : 'hidden'}}>\r\n\r\n              <div className=\"justify-content-center\">\r\n              <div>\r\n                  <ul\r\n                  className=\"nav nav-tabs justify-content-center\"\r\n                  id=\"myTab\"\r\n                  role=\"tablist\"\r\n                  >\r\n                  <li className=\"nav-item\" role=\"presentation\">\r\n                      <a\r\n                      className=\"nav-link\"\r\n                      id=\"trending-tab\"\r\n                      data-toggle=\"tab\"\r\n                      href=\"#trending\"\r\n                      role=\"tab\"\r\n                      aria-controls=\"trending\"\r\n                      aria-selected=\"true\"\r\n                      data-target=\"#homepage-headings\"\r\n                      data-slide-to=\"0\"\r\n                      >TRENDING</a>\r\n                  </li>\r\n                  <li className=\"nav-item\" role=\"presentation\">\r\n                      <a\r\n                      className=\"nav-link\"\r\n                      id=\"podcast-tab\"\r\n                      data-toggle=\"tab\"\r\n                      href=\"#podcast\"\r\n                      role=\"tab\"\r\n                      aria-controls=\"podcast\"\r\n                      aria-selected=\"false\"\r\n                      data-target=\"#homepage-headings\"\r\n                      data-slide-to=\"1\"\r\n                      >PODCAST</a>\r\n                  </li>\r\n                  <li className=\"nav-item d-none d-md-flex\" role=\"presentation\">\r\n                      <a\r\n                      className=\"nav-link\"\r\n                      id=\"moods-and-genres-tab\"\r\n                      data-toggle=\"tab\"\r\n                      href=\"#moods-and-genres\"\r\n                      role=\"tab\"\r\n                      aria-controls=\"moods-and-genres\"\r\n                      aria-selected=\"false\"\r\n                      data-target=\"#homepage-headings\"\r\n                      data-slide-to=\"2\"\r\n                      >MOODS AND GENRES</a>\r\n                  </li>\r\n                  <li className=\"nav-item d-none d-md-flex \" role=\"presentation\">\r\n                      <a\r\n                      className=\"nav-link\"\r\n                      id=\"new-releases-tab\"\r\n                      data-toggle=\"tab\"\r\n                      href=\"#new-releases\"\r\n                      role=\"tab\"\r\n                      aria-controls=\"new-releases\"\r\n                      aria-selected=\"false\"\r\n                      data-target=\"#homepage-headings\"\r\n                      data-slide-to=\"2\"\r\n                      >NEW RELEASES</a>\r\n                  </li>\r\n                  <li className=\"nav-item d-none d-md-flex\" role=\"presentation\">\r\n                      <a\r\n                      className=\"nav-link\"\r\n                      id=\"discover-tab\"\r\n                      data-toggle=\"tab\"\r\n                      href=\"#discover\"\r\n                      role=\"tab\"\r\n                      aria-controls=\"discover\"\r\n                      aria-selected=\"false\"\r\n                      data-target=\"#homepage-headings\"\r\n                      data-slide-to=\"2\"\r\n                      >DISCOVER\r\n                      </a>\r\n                  </li>\r\n                  <button className=\"dropdown-toggle d-md-none\" type=\"button\" id=\"dropdownMenuButton\" \r\n                  data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" style={{\r\n                  background: \"transparent\",\r\n                  fontSize: \"10px\",\r\n                  border: \"none\",\r\n                  color: \"whitesmoke\",\r\n                  fontWeight: \"500\",\r\n                  letterSpacing: \"0.1em\",\r\n                  marginBottom: \"22px\",\r\n                  marginLeft: \"5px\"}}>\r\n                  MORE\r\n                  </button>\r\n                  <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n                  <a className=\"dropdown-item\" href=\"#\">MOODS & GENERES</a>\r\n                  <a className=\"dropdown-item\" href=\"#\">NEW RELEASES</a>\r\n                  <a className=\"dropdown-item\" href=\"#\">DISCOVER</a>\r\n                  </div>\r\n              </ul>\r\n              </div>\r\n              </div>\r\n\r\n                {loading? <div>\r\n                    <Spinner animation=\"grow\" variant=\"light\" />\r\n                </div> :albums.map(category=>  <> \r\n                    \r\n                     <h4 style={{color: '#ddd'}}>{category.name}</h4>\r\n                    <Row>\r\n                    {category.data.map(album=><div>\r\n                        {console.log('album.cover------------', album.album.cover)}\r\n                        {console.log('album.title------------', album.title)}\r\n                        <Col>\r\n                        <div className=\"trending card p-0 col-12 col-md-3 col-lg-2 mr-4 ml-4 mt-5 mb-5\">\r\n                        <img\r\n                            className=\"card-img-top\"\r\n                            src={album.album.cover}\r\n                            alt=\"spotify_playlist_1\"\r\n                        />\r\n                        \r\n                        <span className=\"overlay-icons\">\r\n                        <FontAwesomeIcon icon={faHeart} className='heart mr-3'/>\r\n                        <FontAwesomeIcon icon={faPlay} className='play mr-3'/>\r\n                        <FontAwesomeIcon icon={faEllipsisH} className='mr-3'/>\r\n                        </span>\r\n                        <div>\r\n                            <h6 style={{position: 'relative', top: '1rem'}}>{album.title}</h6>\r\n                        </div>\r\n                        </div>\r\n                        </Col>\r\n                        </div>)}\r\n                    </Row>\r\n                    </>)}\r\n                    \r\n                \r\n                </div>\r\n                </section>\r\n              </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HomeContent;","C:\\Users\\SINKOPA\\Documents\\GitHub\\Strive-M4\\D10\\react-spotify\\src\\components\\Login.jsx",["22","23","24"],{"ruleId":"25","severity":1,"message":"26","line":146,"column":19,"nodeType":"27","endLine":146,"endColumn":57},{"ruleId":"25","severity":1,"message":"26","line":147,"column":19,"nodeType":"27","endLine":147,"endColumn":57},{"ruleId":"25","severity":1,"message":"26","line":148,"column":19,"nodeType":"27","endLine":148,"endColumn":57},{"ruleId":"28","severity":1,"message":"29","line":7,"column":10,"nodeType":"30","messageId":"31","endLine":7,"endColumn":25},{"ruleId":"32","severity":1,"message":"33","line":17,"column":30,"nodeType":"27","endLine":17,"endColumn":48},{"ruleId":"25","severity":1,"message":"26","line":45,"column":11,"nodeType":"27","endLine":45,"endColumn":51},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'FontAwesomeIcon' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images."]